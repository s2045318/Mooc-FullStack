{"ast":null,"code":"'use strict';\n\nconst noop = () => {}; // eslint-disable-line no-empty-function\nconst methods = ['get', 'post', 'delete', 'patch', 'put'];\nconst reflectors = ['toString', 'valueOf', 'inspect', 'constructor', Symbol.toPrimitive, Symbol.for('nodejs.util.inspect.custom')];\nfunction buildRoute(manager) {\n  const route = [''];\n  const handler = {\n    get(target, name) {\n      if (reflectors.includes(name)) return () => route.join('/');\n      if (methods.includes(name)) {\n        const routeBucket = [];\n        for (let i = 0; i < route.length; i++) {\n          // Reactions routes and sub-routes all share the same bucket\n          if (route[i - 1] === 'reactions') break;\n          // Literal IDs should only be taken account if they are the Major ID (the Channel/Guild ID)\n          if (/\\d{16,19}/g.test(route[i]) && !/channels|guilds/.test(route[i - 1])) routeBucket.push(':id');\n          // All other parts of the route should be considered as part of the bucket identifier\n          else routeBucket.push(route[i]);\n        }\n        return options => manager.request(name, route.join('/'), Object.assign({\n          versioned: manager.versioned,\n          route: routeBucket.join('/')\n        }, options));\n      }\n      route.push(name);\n      return new Proxy(noop, handler);\n    },\n    apply(target, _, args) {\n      route.push(...args.filter(x => x != null)); // eslint-disable-line eqeqeq\n      return new Proxy(noop, handler);\n    }\n  };\n  return new Proxy(noop, handler);\n}\nmodule.exports = buildRoute;","map":{"version":3,"names":["noop","methods","reflectors","Symbol","toPrimitive","for","buildRoute","manager","route","handler","get","target","name","includes","join","routeBucket","i","length","test","push","options","request","Object","assign","versioned","Proxy","apply","_","args","filter","x","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/rest/APIRouter.js"],"sourcesContent":["'use strict';\n\nconst noop = () => {}; // eslint-disable-line no-empty-function\nconst methods = ['get', 'post', 'delete', 'patch', 'put'];\nconst reflectors = [\n  'toString',\n  'valueOf',\n  'inspect',\n  'constructor',\n  Symbol.toPrimitive,\n  Symbol.for('nodejs.util.inspect.custom'),\n];\n\nfunction buildRoute(manager) {\n  const route = [''];\n  const handler = {\n    get(target, name) {\n      if (reflectors.includes(name)) return () => route.join('/');\n      if (methods.includes(name)) {\n        const routeBucket = [];\n        for (let i = 0; i < route.length; i++) {\n          // Reactions routes and sub-routes all share the same bucket\n          if (route[i - 1] === 'reactions') break;\n          // Literal IDs should only be taken account if they are the Major ID (the Channel/Guild ID)\n          if (/\\d{16,19}/g.test(route[i]) && !/channels|guilds/.test(route[i - 1])) routeBucket.push(':id');\n          // All other parts of the route should be considered as part of the bucket identifier\n          else routeBucket.push(route[i]);\n        }\n        return options =>\n          manager.request(\n            name,\n            route.join('/'),\n            Object.assign(\n              {\n                versioned: manager.versioned,\n                route: routeBucket.join('/'),\n              },\n              options,\n            ),\n          );\n      }\n      route.push(name);\n      return new Proxy(noop, handler);\n    },\n    apply(target, _, args) {\n      route.push(...args.filter(x => x != null)); // eslint-disable-line eqeqeq\n      return new Proxy(noop, handler);\n    },\n  };\n  return new Proxy(noop, handler);\n}\n\nmodule.exports = buildRoute;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACvB,MAAMC,OAAO,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC;AACzD,MAAMC,UAAU,GAAG,CACjB,UAAU,EACV,SAAS,EACT,SAAS,EACT,aAAa,EACbC,MAAM,CAACC,WAAW,EAClBD,MAAM,CAACE,GAAG,CAAC,4BAA4B,CAAC,CACzC;AAED,SAASC,UAAU,CAACC,OAAO,EAAE;EAC3B,MAAMC,KAAK,GAAG,CAAC,EAAE,CAAC;EAClB,MAAMC,OAAO,GAAG;IACdC,GAAG,CAACC,MAAM,EAAEC,IAAI,EAAE;MAChB,IAAIV,UAAU,CAACW,QAAQ,CAACD,IAAI,CAAC,EAAE,OAAO,MAAMJ,KAAK,CAACM,IAAI,CAAC,GAAG,CAAC;MAC3D,IAAIb,OAAO,CAACY,QAAQ,CAACD,IAAI,CAAC,EAAE;QAC1B,MAAMG,WAAW,GAAG,EAAE;QACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;UACrC;UACA,IAAIR,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,KAAK,WAAW,EAAE;UAClC;UACA,IAAI,YAAY,CAACE,IAAI,CAACV,KAAK,CAACQ,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAACE,IAAI,CAACV,KAAK,CAACQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAED,WAAW,CAACI,IAAI,CAAC,KAAK,CAAC;UACjG;UAAA,KACKJ,WAAW,CAACI,IAAI,CAACX,KAAK,CAACQ,CAAC,CAAC,CAAC;QACjC;QACA,OAAOI,OAAO,IACZb,OAAO,CAACc,OAAO,CACbT,IAAI,EACJJ,KAAK,CAACM,IAAI,CAAC,GAAG,CAAC,EACfQ,MAAM,CAACC,MAAM,CACX;UACEC,SAAS,EAAEjB,OAAO,CAACiB,SAAS;UAC5BhB,KAAK,EAAEO,WAAW,CAACD,IAAI,CAAC,GAAG;QAC7B,CAAC,EACDM,OAAO,CACR,CACF;MACL;MACAZ,KAAK,CAACW,IAAI,CAACP,IAAI,CAAC;MAChB,OAAO,IAAIa,KAAK,CAACzB,IAAI,EAAES,OAAO,CAAC;IACjC,CAAC;IACDiB,KAAK,CAACf,MAAM,EAAEgB,CAAC,EAAEC,IAAI,EAAE;MACrBpB,KAAK,CAACW,IAAI,CAAC,GAAGS,IAAI,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5C,OAAO,IAAIL,KAAK,CAACzB,IAAI,EAAES,OAAO,CAAC;IACjC;EACF,CAAC;EACD,OAAO,IAAIgB,KAAK,CAACzB,IAAI,EAAES,OAAO,CAAC;AACjC;AAEAsB,MAAM,CAACC,OAAO,GAAG1B,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}