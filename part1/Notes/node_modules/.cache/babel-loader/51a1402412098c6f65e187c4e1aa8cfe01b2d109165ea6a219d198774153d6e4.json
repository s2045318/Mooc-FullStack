{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\nconst TeamMember = require('./TeamMember');\nconst Collection = require('../util/Collection');\nconst Snowflake = require('../util/Snowflake');\n\n/**\n * Represents a Client OAuth2 Application Team.\n * @extends {Base}\n */\nclass Team extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n  _patch(data) {\n    /**\n     * The ID of the Team\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the Team\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The Team's icon hash\n     * @type {?string}\n     */\n    this.icon = data.icon || null;\n\n    /**\n     * The Team's owner id\n     * @type {?string}\n     */\n    this.ownerID = data.owner_user_id || null;\n\n    /**\n     * The Team's members\n     * @type {Collection<Snowflake, TeamMember>}\n     */\n    this.members = new Collection();\n    for (const memberData of data.members) {\n      const member = new TeamMember(this, memberData);\n      this.members.set(member.id, member);\n    }\n  }\n\n  /**\n   * The owner of this team\n   * @type {?TeamMember}\n   * @readonly\n   */\n  get owner() {\n    return this.members.get(this.ownerID) || null;\n  }\n\n  /**\n   * The timestamp the team was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return Snowflake.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the team was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the teams's icon.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string} URL to the icon\n   */\n  iconURL() {\n    let {\n      format,\n      size\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.icon) return null;\n    return this.client.rest.cdn.TeamIcon(this.id, this.icon, {\n      format,\n      size\n    });\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the Team's name instead of the\n   * Team object.\n   * @returns {string}\n   * @example\n   * // Logs: Team name: My Team\n   * console.log(`Team name: ${team}`);\n   */\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return super.toJSON({\n      createdTimestamp: true\n    });\n  }\n}\nmodule.exports = Team;","map":{"version":3,"names":["Base","require","TeamMember","Collection","Snowflake","Team","constructor","client","data","_patch","id","name","icon","ownerID","owner_user_id","members","memberData","member","set","owner","get","createdTimestamp","deconstruct","timestamp","createdAt","Date","iconURL","format","size","rest","cdn","TeamIcon","toString","toJSON","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/structures/Team.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\nconst TeamMember = require('./TeamMember');\nconst Collection = require('../util/Collection');\nconst Snowflake = require('../util/Snowflake');\n\n/**\n * Represents a Client OAuth2 Application Team.\n * @extends {Base}\n */\nclass Team extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The ID of the Team\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The name of the Team\n     * @type {string}\n     */\n    this.name = data.name;\n\n    /**\n     * The Team's icon hash\n     * @type {?string}\n     */\n    this.icon = data.icon || null;\n\n    /**\n     * The Team's owner id\n     * @type {?string}\n     */\n    this.ownerID = data.owner_user_id || null;\n\n    /**\n     * The Team's members\n     * @type {Collection<Snowflake, TeamMember>}\n     */\n    this.members = new Collection();\n\n    for (const memberData of data.members) {\n      const member = new TeamMember(this, memberData);\n      this.members.set(member.id, member);\n    }\n  }\n\n  /**\n   * The owner of this team\n   * @type {?TeamMember}\n   * @readonly\n   */\n  get owner() {\n    return this.members.get(this.ownerID) || null;\n  }\n\n  /**\n   * The timestamp the team was created at\n   * @type {number}\n   * @readonly\n   */\n  get createdTimestamp() {\n    return Snowflake.deconstruct(this.id).timestamp;\n  }\n\n  /**\n   * The time the team was created at\n   * @type {Date}\n   * @readonly\n   */\n  get createdAt() {\n    return new Date(this.createdTimestamp);\n  }\n\n  /**\n   * A link to the teams's icon.\n   * @param {ImageURLOptions} [options={}] Options for the Image URL\n   * @returns {?string} URL to the icon\n   */\n  iconURL({ format, size } = {}) {\n    if (!this.icon) return null;\n    return this.client.rest.cdn.TeamIcon(this.id, this.icon, { format, size });\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the Team's name instead of the\n   * Team object.\n   * @returns {string}\n   * @example\n   * // Logs: Team name: My Team\n   * console.log(`Team name: ${team}`);\n   */\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return super.toJSON({ createdTimestamp: true });\n  }\n}\n\nmodule.exports = Team;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAMC,UAAU,GAAGD,OAAO,CAAC,cAAc,CAAC;AAC1C,MAAME,UAAU,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAChD,MAAMG,SAAS,GAAGH,OAAO,CAAC,mBAAmB,CAAC;;AAE9C;AACA;AACA;AACA;AACA,MAAMI,IAAI,SAASL,IAAI,CAAC;EACtBM,WAAW,CAACC,MAAM,EAAEC,IAAI,EAAE;IACxB,KAAK,CAACD,MAAM,CAAC;IACb,IAAI,CAACE,MAAM,CAACD,IAAI,CAAC;EACnB;EAEAC,MAAM,CAACD,IAAI,EAAE;IACX;AACJ;AACA;AACA;IACI,IAAI,CAACE,EAAE,GAAGF,IAAI,CAACE,EAAE;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGH,IAAI,CAACG,IAAI;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGJ,IAAI,CAACI,IAAI,IAAI,IAAI;;IAE7B;AACJ;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAGL,IAAI,CAACM,aAAa,IAAI,IAAI;;IAEzC;AACJ;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG,IAAIZ,UAAU,EAAE;IAE/B,KAAK,MAAMa,UAAU,IAAIR,IAAI,CAACO,OAAO,EAAE;MACrC,MAAME,MAAM,GAAG,IAAIf,UAAU,CAAC,IAAI,EAAEc,UAAU,CAAC;MAC/C,IAAI,CAACD,OAAO,CAACG,GAAG,CAACD,MAAM,CAACP,EAAE,EAAEO,MAAM,CAAC;IACrC;EACF;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIE,KAAK,GAAG;IACV,OAAO,IAAI,CAACJ,OAAO,CAACK,GAAG,CAAC,IAAI,CAACP,OAAO,CAAC,IAAI,IAAI;EAC/C;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIQ,gBAAgB,GAAG;IACrB,OAAOjB,SAAS,CAACkB,WAAW,CAAC,IAAI,CAACZ,EAAE,CAAC,CAACa,SAAS;EACjD;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,SAAS,GAAG;IACd,OAAO,IAAIC,IAAI,CAAC,IAAI,CAACJ,gBAAgB,CAAC;EACxC;;EAEA;AACF;AACA;AACA;AACA;EACEK,OAAO,GAAwB;IAAA,IAAvB;MAAEC,MAAM;MAAEC;IAAK,CAAC,uEAAG,CAAC,CAAC;IAC3B,IAAI,CAAC,IAAI,CAAChB,IAAI,EAAE,OAAO,IAAI;IAC3B,OAAO,IAAI,CAACL,MAAM,CAACsB,IAAI,CAACC,GAAG,CAACC,QAAQ,CAAC,IAAI,CAACrB,EAAE,EAAE,IAAI,CAACE,IAAI,EAAE;MAAEe,MAAM;MAAEC;IAAK,CAAC,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,QAAQ,GAAG;IACT,OAAO,IAAI,CAACrB,IAAI;EAClB;EAEAsB,MAAM,GAAG;IACP,OAAO,KAAK,CAACA,MAAM,CAAC;MAAEZ,gBAAgB,EAAE;IAAK,CAAC,CAAC;EACjD;AACF;AAEAa,MAAM,CAACC,OAAO,GAAG9B,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}