{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst {\n  Events,\n  Status\n} = require('../../util/Constants');\nclass GuildMemberRemoveAction extends Action {\n  handle(data, shard) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let member = null;\n    if (guild) {\n      member = this.getMember({\n        user: data.user\n      }, guild);\n      guild.memberCount--;\n      if (member) {\n        member.deleted = true;\n        guild.members.cache.delete(member.id);\n        /**\n         * Emitted whenever a member leaves a guild, or is kicked.\n         * @event Client#guildMemberRemove\n         * @param {GuildMember} member The member that has left/been kicked from the guild\n         */\n        if (shard.status === Status.READY) client.emit(Events.GUILD_MEMBER_REMOVE, member);\n      }\n      guild.voiceStates.cache.delete(data.user.id);\n    }\n    return {\n      guild,\n      member\n    };\n  }\n}\nmodule.exports = GuildMemberRemoveAction;","map":{"version":3,"names":["Action","require","Events","Status","GuildMemberRemoveAction","handle","data","shard","client","guild","guilds","cache","get","guild_id","member","getMember","user","memberCount","deleted","members","delete","id","status","READY","emit","GUILD_MEMBER_REMOVE","voiceStates","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/client/actions/GuildMemberRemove.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst { Events, Status } = require('../../util/Constants');\n\nclass GuildMemberRemoveAction extends Action {\n  handle(data, shard) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let member = null;\n    if (guild) {\n      member = this.getMember({ user: data.user }, guild);\n      guild.memberCount--;\n      if (member) {\n        member.deleted = true;\n        guild.members.cache.delete(member.id);\n        /**\n         * Emitted whenever a member leaves a guild, or is kicked.\n         * @event Client#guildMemberRemove\n         * @param {GuildMember} member The member that has left/been kicked from the guild\n         */\n        if (shard.status === Status.READY) client.emit(Events.GUILD_MEMBER_REMOVE, member);\n      }\n      guild.voiceStates.cache.delete(data.user.id);\n    }\n    return { guild, member };\n  }\n}\n\nmodule.exports = GuildMemberRemoveAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAM;EAAEC,MAAM;EAAEC;AAAO,CAAC,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAE1D,MAAMG,uBAAuB,SAASJ,MAAM,CAAC;EAC3CK,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAE;IAClB,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,KAAK,GAAGD,MAAM,CAACE,MAAM,CAACC,KAAK,CAACC,GAAG,CAACN,IAAI,CAACO,QAAQ,CAAC;IACpD,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIL,KAAK,EAAE;MACTK,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEV,IAAI,CAACU;MAAK,CAAC,EAAEP,KAAK,CAAC;MACnDA,KAAK,CAACQ,WAAW,EAAE;MACnB,IAAIH,MAAM,EAAE;QACVA,MAAM,CAACI,OAAO,GAAG,IAAI;QACrBT,KAAK,CAACU,OAAO,CAACR,KAAK,CAACS,MAAM,CAACN,MAAM,CAACO,EAAE,CAAC;QACrC;AACR;AACA;AACA;AACA;QACQ,IAAId,KAAK,CAACe,MAAM,KAAKnB,MAAM,CAACoB,KAAK,EAAEf,MAAM,CAACgB,IAAI,CAACtB,MAAM,CAACuB,mBAAmB,EAAEX,MAAM,CAAC;MACpF;MACAL,KAAK,CAACiB,WAAW,CAACf,KAAK,CAACS,MAAM,CAACd,IAAI,CAACU,IAAI,CAACK,EAAE,CAAC;IAC9C;IACA,OAAO;MAAEZ,KAAK;MAAEK;IAAO,CAAC;EAC1B;AACF;AAEAa,MAAM,CAACC,OAAO,GAAGxB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}