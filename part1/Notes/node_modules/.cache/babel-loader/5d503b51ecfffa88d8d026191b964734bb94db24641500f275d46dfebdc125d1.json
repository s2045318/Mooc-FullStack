{"ast":null,"code":"'use strict';\n\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link User#flags} bitfield.\n * @extends {BitField}\n */\nclass UserFlags extends BitField {}\n\n/**\n * @name UserFlags\n * @kind constructor\n * @memberof UserFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Numeric user flags. All available properties:\n * * `DISCORD_EMPLOYEE`\n * * `PARTNERED_SERVER_OWNER`\n * * `DISCORD_PARTNER` **(deprecated)**\n * * `HYPESQUAD_EVENTS`\n * * `BUGHUNTER_LEVEL_1`\n * * `HOUSE_BRAVERY`\n * * `HOUSE_BRILLIANCE`\n * * `HOUSE_BALANCE`\n * * `EARLY_SUPPORTER`\n * * `TEAM_USER`\n * * `SYSTEM`\n * * `BUGHUNTER_LEVEL_2`\n * * `VERIFIED_BOT`\n * * `EARLY_VERIFIED_BOT_DEVELOPER`\n * * `VERIFIED_DEVELOPER` **(deprecated)**\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/user#user-object-user-flags}\n */\nUserFlags.FLAGS = {\n  DISCORD_EMPLOYEE: 1 << 0,\n  PARTNERED_SERVER_OWNER: 1 << 1,\n  DISCORD_PARTNER: 1 << 1,\n  HYPESQUAD_EVENTS: 1 << 2,\n  BUGHUNTER_LEVEL_1: 1 << 3,\n  HOUSE_BRAVERY: 1 << 6,\n  HOUSE_BRILLIANCE: 1 << 7,\n  HOUSE_BALANCE: 1 << 8,\n  EARLY_SUPPORTER: 1 << 9,\n  TEAM_USER: 1 << 10,\n  SYSTEM: 1 << 12,\n  BUGHUNTER_LEVEL_2: 1 << 14,\n  VERIFIED_BOT: 1 << 16,\n  EARLY_VERIFIED_DEVELOPER: 1 << 17,\n  VERIFIED_DEVELOPER: 1 << 17\n};\nmodule.exports = UserFlags;","map":{"version":3,"names":["BitField","require","UserFlags","FLAGS","DISCORD_EMPLOYEE","PARTNERED_SERVER_OWNER","DISCORD_PARTNER","HYPESQUAD_EVENTS","BUGHUNTER_LEVEL_1","HOUSE_BRAVERY","HOUSE_BRILLIANCE","HOUSE_BALANCE","EARLY_SUPPORTER","TEAM_USER","SYSTEM","BUGHUNTER_LEVEL_2","VERIFIED_BOT","EARLY_VERIFIED_DEVELOPER","VERIFIED_DEVELOPER","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/util/UserFlags.js"],"sourcesContent":["'use strict';\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to interact with a {@link User#flags} bitfield.\n * @extends {BitField}\n */\nclass UserFlags extends BitField {}\n\n/**\n * @name UserFlags\n * @kind constructor\n * @memberof UserFlags\n * @param {BitFieldResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Numeric user flags. All available properties:\n * * `DISCORD_EMPLOYEE`\n * * `PARTNERED_SERVER_OWNER`\n * * `DISCORD_PARTNER` **(deprecated)**\n * * `HYPESQUAD_EVENTS`\n * * `BUGHUNTER_LEVEL_1`\n * * `HOUSE_BRAVERY`\n * * `HOUSE_BRILLIANCE`\n * * `HOUSE_BALANCE`\n * * `EARLY_SUPPORTER`\n * * `TEAM_USER`\n * * `SYSTEM`\n * * `BUGHUNTER_LEVEL_2`\n * * `VERIFIED_BOT`\n * * `EARLY_VERIFIED_BOT_DEVELOPER`\n * * `VERIFIED_DEVELOPER` **(deprecated)**\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/resources/user#user-object-user-flags}\n */\nUserFlags.FLAGS = {\n  DISCORD_EMPLOYEE: 1 << 0,\n  PARTNERED_SERVER_OWNER: 1 << 1,\n  DISCORD_PARTNER: 1 << 1,\n  HYPESQUAD_EVENTS: 1 << 2,\n  BUGHUNTER_LEVEL_1: 1 << 3,\n  HOUSE_BRAVERY: 1 << 6,\n  HOUSE_BRILLIANCE: 1 << 7,\n  HOUSE_BALANCE: 1 << 8,\n  EARLY_SUPPORTER: 1 << 9,\n  TEAM_USER: 1 << 10,\n  SYSTEM: 1 << 12,\n  BUGHUNTER_LEVEL_2: 1 << 14,\n  VERIFIED_BOT: 1 << 16,\n  EARLY_VERIFIED_DEVELOPER: 1 << 17,\n  VERIFIED_DEVELOPER: 1 << 17,\n};\n\nmodule.exports = UserFlags;\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAEtC;AACA;AACA;AACA;AACA,MAAMC,SAAS,SAASF,QAAQ,CAAC;;AAEjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,SAAS,CAACC,KAAK,GAAG;EAChBC,gBAAgB,EAAE,CAAC,IAAI,CAAC;EACxBC,sBAAsB,EAAE,CAAC,IAAI,CAAC;EAC9BC,eAAe,EAAE,CAAC,IAAI,CAAC;EACvBC,gBAAgB,EAAE,CAAC,IAAI,CAAC;EACxBC,iBAAiB,EAAE,CAAC,IAAI,CAAC;EACzBC,aAAa,EAAE,CAAC,IAAI,CAAC;EACrBC,gBAAgB,EAAE,CAAC,IAAI,CAAC;EACxBC,aAAa,EAAE,CAAC,IAAI,CAAC;EACrBC,eAAe,EAAE,CAAC,IAAI,CAAC;EACvBC,SAAS,EAAE,CAAC,IAAI,EAAE;EAClBC,MAAM,EAAE,CAAC,IAAI,EAAE;EACfC,iBAAiB,EAAE,CAAC,IAAI,EAAE;EAC1BC,YAAY,EAAE,CAAC,IAAI,EAAE;EACrBC,wBAAwB,EAAE,CAAC,IAAI,EAAE;EACjCC,kBAAkB,EAAE,CAAC,IAAI;AAC3B,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGlB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}