{"ast":null,"code":"'use strict';\n\nconst {\n  Presence\n} = require('./Presence');\nconst {\n  TypeError\n} = require('../errors');\nconst Collection = require('../util/Collection');\nconst {\n  ActivityTypes,\n  OPCodes\n} = require('../util/Constants');\nclass ClientPresence extends Presence {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Object} [data={}] The data for the client presence\n   */\n  constructor(client) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(client, Object.assign(data, {\n      status: 'online',\n      user: {\n        id: null\n      }\n    }));\n  }\n  async set(presence) {\n    const packet = await this._parse(presence);\n    this.patch(packet);\n    if (typeof presence.shardID === 'undefined') {\n      this.client.ws.broadcast({\n        op: OPCodes.STATUS_UPDATE,\n        d: packet\n      });\n    } else if (Array.isArray(presence.shardID)) {\n      for (const shardID of presence.shardID) {\n        this.client.ws.shards.get(shardID).send({\n          op: OPCodes.STATUS_UPDATE,\n          d: packet\n        });\n      }\n    } else {\n      this.client.ws.shards.get(presence.shardID).send({\n        op: OPCodes.STATUS_UPDATE,\n        d: packet\n      });\n    }\n    return this;\n  }\n  async _parse(_ref) {\n    let {\n      status,\n      since,\n      afk,\n      activity\n    } = _ref;\n    const applicationID = activity && (activity.application ? activity.application.id || activity.application : null);\n    let assets = new Collection();\n    if (activity) {\n      if (typeof activity.name !== 'string') throw new TypeError('INVALID_TYPE', 'name', 'string');\n      if (!activity.type) activity.type = 0;\n      if (activity.assets && applicationID) {\n        try {\n          const a = await this.client.api.oauth2.applications(applicationID).assets.get();\n          for (const asset of a) assets.set(asset.name, asset.id);\n        } catch {} // eslint-disable-line no-empty\n      }\n    }\n\n    const packet = {\n      afk: afk != null ? afk : false,\n      // eslint-disable-line eqeqeq\n      since: since != null ? since : null,\n      // eslint-disable-line eqeqeq\n      status: status || this.status,\n      game: activity ? {\n        type: activity.type,\n        name: activity.name,\n        url: activity.url,\n        details: activity.details || undefined,\n        state: activity.state || undefined,\n        assets: activity.assets ? {\n          large_text: activity.assets.largeText || undefined,\n          small_text: activity.assets.smallText || undefined,\n          large_image: assets.get(activity.assets.largeImage) || activity.assets.largeImage,\n          small_image: assets.get(activity.assets.smallImage) || activity.assets.smallImage\n        } : undefined,\n        timestamps: activity.timestamps || undefined,\n        party: activity.party || undefined,\n        application_id: applicationID || undefined,\n        secrets: activity.secrets || undefined,\n        instance: activity.instance || undefined\n      } : null\n    };\n    if ((status || afk || since) && !activity) {\n      packet.game = this.activities[0] || null;\n    }\n    if (packet.game) {\n      packet.game.type = typeof packet.game.type === 'number' ? packet.game.type : ActivityTypes.indexOf(packet.game.type);\n    }\n    return packet;\n  }\n}\nmodule.exports = ClientPresence;","map":{"version":3,"names":["Presence","require","TypeError","Collection","ActivityTypes","OPCodes","ClientPresence","constructor","client","data","Object","assign","status","user","id","set","presence","packet","_parse","patch","shardID","ws","broadcast","op","STATUS_UPDATE","d","Array","isArray","shards","get","send","since","afk","activity","applicationID","application","assets","name","type","a","api","oauth2","applications","asset","game","url","details","undefined","state","large_text","largeText","small_text","smallText","large_image","largeImage","small_image","smallImage","timestamps","party","application_id","secrets","instance","activities","indexOf","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/structures/ClientPresence.js"],"sourcesContent":["'use strict';\n\nconst { Presence } = require('./Presence');\nconst { TypeError } = require('../errors');\nconst Collection = require('../util/Collection');\nconst { ActivityTypes, OPCodes } = require('../util/Constants');\n\nclass ClientPresence extends Presence {\n  /**\n   * @param {Client} client The instantiating client\n   * @param {Object} [data={}] The data for the client presence\n   */\n  constructor(client, data = {}) {\n    super(client, Object.assign(data, { status: 'online', user: { id: null } }));\n  }\n\n  async set(presence) {\n    const packet = await this._parse(presence);\n    this.patch(packet);\n    if (typeof presence.shardID === 'undefined') {\n      this.client.ws.broadcast({ op: OPCodes.STATUS_UPDATE, d: packet });\n    } else if (Array.isArray(presence.shardID)) {\n      for (const shardID of presence.shardID) {\n        this.client.ws.shards.get(shardID).send({ op: OPCodes.STATUS_UPDATE, d: packet });\n      }\n    } else {\n      this.client.ws.shards.get(presence.shardID).send({ op: OPCodes.STATUS_UPDATE, d: packet });\n    }\n    return this;\n  }\n\n  async _parse({ status, since, afk, activity }) {\n    const applicationID = activity && (activity.application ? activity.application.id || activity.application : null);\n    let assets = new Collection();\n    if (activity) {\n      if (typeof activity.name !== 'string') throw new TypeError('INVALID_TYPE', 'name', 'string');\n      if (!activity.type) activity.type = 0;\n      if (activity.assets && applicationID) {\n        try {\n          const a = await this.client.api.oauth2.applications(applicationID).assets.get();\n          for (const asset of a) assets.set(asset.name, asset.id);\n        } catch {} // eslint-disable-line no-empty\n      }\n    }\n\n    const packet = {\n      afk: afk != null ? afk : false, // eslint-disable-line eqeqeq\n      since: since != null ? since : null, // eslint-disable-line eqeqeq\n      status: status || this.status,\n      game: activity\n        ? {\n            type: activity.type,\n            name: activity.name,\n            url: activity.url,\n            details: activity.details || undefined,\n            state: activity.state || undefined,\n            assets: activity.assets\n              ? {\n                  large_text: activity.assets.largeText || undefined,\n                  small_text: activity.assets.smallText || undefined,\n                  large_image: assets.get(activity.assets.largeImage) || activity.assets.largeImage,\n                  small_image: assets.get(activity.assets.smallImage) || activity.assets.smallImage,\n                }\n              : undefined,\n            timestamps: activity.timestamps || undefined,\n            party: activity.party || undefined,\n            application_id: applicationID || undefined,\n            secrets: activity.secrets || undefined,\n            instance: activity.instance || undefined,\n          }\n        : null,\n    };\n\n    if ((status || afk || since) && !activity) {\n      packet.game = this.activities[0] || null;\n    }\n\n    if (packet.game) {\n      packet.game.type =\n        typeof packet.game.type === 'number' ? packet.game.type : ActivityTypes.indexOf(packet.game.type);\n    }\n\n    return packet;\n  }\n}\n\nmodule.exports = ClientPresence;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}