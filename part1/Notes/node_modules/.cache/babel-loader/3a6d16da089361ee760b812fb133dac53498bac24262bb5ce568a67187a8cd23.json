{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst Collection = require('../../util/Collection');\nconst {\n  Events\n} = require('../../util/Constants');\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    if (channel) {\n      const ids = data.ids;\n      const messages = new Collection();\n      for (const id of ids) {\n        const message = this.getMessage({\n          id,\n          guild_id: data.guild_id\n        }, channel, false);\n        if (message) {\n          message.deleted = true;\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their ID\n       */\n      if (messages.size > 0) client.emit(Events.MESSAGE_BULK_DELETE, messages);\n      return {\n        messages\n      };\n    }\n    return {};\n  }\n}\nmodule.exports = MessageDeleteBulkAction;","map":{"version":3,"names":["Action","require","Collection","Events","MessageDeleteBulkAction","handle","data","client","channel","channels","cache","get","channel_id","ids","messages","id","message","getMessage","guild_id","deleted","set","delete","size","emit","MESSAGE_BULK_DELETE","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/client/actions/MessageDeleteBulk.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Collection = require('../../util/Collection');\nconst { Events } = require('../../util/Constants');\n\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n\n    if (channel) {\n      const ids = data.ids;\n      const messages = new Collection();\n      for (const id of ids) {\n        const message = this.getMessage(\n          {\n            id,\n            guild_id: data.guild_id,\n          },\n          channel,\n          false,\n        );\n        if (message) {\n          message.deleted = true;\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their ID\n       */\n      if (messages.size > 0) client.emit(Events.MESSAGE_BULK_DELETE, messages);\n      return { messages };\n    }\n    return {};\n  }\n}\n\nmodule.exports = MessageDeleteBulkAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,UAAU,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACnD,MAAM;EAAEE;AAAO,CAAC,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAElD,MAAMG,uBAAuB,SAASJ,MAAM,CAAC;EAC3CK,MAAM,CAACC,IAAI,EAAE;IACX,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,QAAQ,CAACC,KAAK,CAACC,GAAG,CAACL,IAAI,CAACM,UAAU,CAAC;IAE1D,IAAIJ,OAAO,EAAE;MACX,MAAMK,GAAG,GAAGP,IAAI,CAACO,GAAG;MACpB,MAAMC,QAAQ,GAAG,IAAIZ,UAAU,EAAE;MACjC,KAAK,MAAMa,EAAE,IAAIF,GAAG,EAAE;QACpB,MAAMG,OAAO,GAAG,IAAI,CAACC,UAAU,CAC7B;UACEF,EAAE;UACFG,QAAQ,EAAEZ,IAAI,CAACY;QACjB,CAAC,EACDV,OAAO,EACP,KAAK,CACN;QACD,IAAIQ,OAAO,EAAE;UACXA,OAAO,CAACG,OAAO,GAAG,IAAI;UACtBL,QAAQ,CAACM,GAAG,CAACJ,OAAO,CAACD,EAAE,EAAEC,OAAO,CAAC;UACjCR,OAAO,CAACM,QAAQ,CAACJ,KAAK,CAACW,MAAM,CAACN,EAAE,CAAC;QACnC;MACF;;MAEA;AACN;AACA;AACA;AACA;MACM,IAAID,QAAQ,CAACQ,IAAI,GAAG,CAAC,EAAEf,MAAM,CAACgB,IAAI,CAACpB,MAAM,CAACqB,mBAAmB,EAAEV,QAAQ,CAAC;MACxE,OAAO;QAAEA;MAAS,CAAC;IACrB;IACA,OAAO,CAAC,CAAC;EACX;AACF;AAEAW,MAAM,CAACC,OAAO,GAAGtB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}