{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\nconst {\n  Endpoints\n} = require('../util/Constants');\nconst Permissions = require('../util/Permissions');\n\n/**\n * Represents an invitation to a guild channel.\n * <warn>The only guaranteed properties are `code`, `channel`, and `url`. Other properties can be missing.</warn>\n * @extends {Base}\n */\nclass Invite extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n  _patch(data) {\n    /**\n     * The guild the invite is for\n     * @type {?Guild}\n     */\n    this.guild = data.guild ? this.client.guilds.add(data.guild, false) : null;\n\n    /**\n     * The code for this invite\n     * @type {string}\n     */\n    this.code = data.code;\n\n    /**\n     * The approximate number of online members of the guild this invite is for\n     * @type {?number}\n     */\n    this.presenceCount = 'approximate_presence_count' in data ? data.approximate_presence_count : null;\n\n    /**\n     * The approximate total number of members of the guild this invite is for\n     * @type {?number}\n     */\n    this.memberCount = 'approximate_member_count' in data ? data.approximate_member_count : null;\n\n    /**\n     * Whether or not this invite is temporary\n     * @type {?boolean}\n     */\n    this.temporary = 'temporary' in data ? data.temporary : null;\n\n    /**\n     * The maximum age of the invite, in seconds, 0 if never expires\n     * @type {?number}\n     */\n    this.maxAge = 'max_age' in data ? data.max_age : null;\n\n    /**\n     * How many times this invite has been used\n     * @type {?number}\n     */\n    this.uses = 'uses' in data ? data.uses : null;\n\n    /**\n     * The maximum uses of this invite\n     * @type {?number}\n     */\n    this.maxUses = 'max_uses' in data ? data.max_uses : null;\n\n    /**\n     * The user who created this invite\n     * @type {?User}\n     */\n    this.inviter = data.inviter ? this.client.users.add(data.inviter) : null;\n\n    /**\n     * The target user for this invite\n     * @type {?User}\n     */\n    this.targetUser = data.target_user ? this.client.users.add(data.target_user) : null;\n\n    /**\n     * The type of the target user:\n     * * 1: STREAM\n     * @typedef {number} TargetUser\n     */\n\n    /**\n     * The target user type\n     * @type {?TargetUser}\n     */\n    this.targetUserType = typeof data.target_user_type === 'number' ? data.target_user_type : null;\n\n    /**\n     * The channel the invite is for\n     * @type {Channel}\n     */\n    this.channel = this.client.channels.add(data.channel, this.guild, false);\n\n    /**\n     * The timestamp the invite was created at\n     * @type {?number}\n     */\n    this.createdTimestamp = 'created_at' in data ? new Date(data.created_at).getTime() : null;\n  }\n\n  /**\n   * The time the invite was created at\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.createdTimestamp ? new Date(this.createdTimestamp) : null;\n  }\n\n  /**\n   * Whether the invite is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    const guild = this.guild;\n    if (!guild || !this.client.guilds.cache.has(guild.id)) return false;\n    if (!guild.me) throw new Error('GUILD_UNCACHED_ME');\n    return this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_CHANNELS, false) || guild.me.permissions.has(Permissions.FLAGS.MANAGE_GUILD);\n  }\n\n  /**\n   * The timestamp the invite will expire at\n   * @type {?number}\n   * @readonly\n   */\n  get expiresTimestamp() {\n    return this.createdTimestamp && this.maxAge ? this.createdTimestamp + this.maxAge * 1000 : null;\n  }\n\n  /**\n   * The time the invite will expire at\n   * @type {?Date}\n   * @readonly\n   */\n  get expiresAt() {\n    const {\n      expiresTimestamp\n    } = this;\n    return expiresTimestamp ? new Date(expiresTimestamp) : null;\n  }\n\n  /**\n   * The URL to the invite\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return Endpoints.invite(this.client.options.http.invite, this.code);\n  }\n\n  /**\n   * Deletes this invite.\n   * @param {string} [reason] Reason for deleting this invite\n   * @returns {Promise<Invite>}\n   */\n  delete(reason) {\n    return this.client.api.invites[this.code].delete({\n      reason\n    }).then(() => this);\n  }\n\n  /**\n   * When concatenated with a string, this automatically concatenates the invite's URL instead of the object.\n   * @returns {string}\n   * @example\n   * // Logs: Invite: https://discord.gg/A1b2C3\n   * console.log(`Invite: ${invite}`);\n   */\n  toString() {\n    return this.url;\n  }\n  toJSON() {\n    return super.toJSON({\n      url: true,\n      expiresTimestamp: true,\n      presenceCount: false,\n      memberCount: false,\n      uses: false,\n      channel: 'channelID',\n      inviter: 'inviterID',\n      guild: 'guildID'\n    });\n  }\n  valueOf() {\n    return this.code;\n  }\n}\nmodule.exports = Invite;","map":{"version":3,"names":["Base","require","Endpoints","Permissions","Invite","constructor","client","data","_patch","guild","guilds","add","code","presenceCount","approximate_presence_count","memberCount","approximate_member_count","temporary","maxAge","max_age","uses","maxUses","max_uses","inviter","users","targetUser","target_user","targetUserType","target_user_type","channel","channels","createdTimestamp","Date","created_at","getTime","createdAt","deletable","cache","has","id","me","Error","permissionsFor","user","FLAGS","MANAGE_CHANNELS","permissions","MANAGE_GUILD","expiresTimestamp","expiresAt","url","invite","options","http","delete","reason","api","invites","then","toString","toJSON","valueOf","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/structures/Invite.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\nconst { Endpoints } = require('../util/Constants');\nconst Permissions = require('../util/Permissions');\n\n/**\n * Represents an invitation to a guild channel.\n * <warn>The only guaranteed properties are `code`, `channel`, and `url`. Other properties can be missing.</warn>\n * @extends {Base}\n */\nclass Invite extends Base {\n  constructor(client, data) {\n    super(client);\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The guild the invite is for\n     * @type {?Guild}\n     */\n    this.guild = data.guild ? this.client.guilds.add(data.guild, false) : null;\n\n    /**\n     * The code for this invite\n     * @type {string}\n     */\n    this.code = data.code;\n\n    /**\n     * The approximate number of online members of the guild this invite is for\n     * @type {?number}\n     */\n    this.presenceCount = 'approximate_presence_count' in data ? data.approximate_presence_count : null;\n\n    /**\n     * The approximate total number of members of the guild this invite is for\n     * @type {?number}\n     */\n    this.memberCount = 'approximate_member_count' in data ? data.approximate_member_count : null;\n\n    /**\n     * Whether or not this invite is temporary\n     * @type {?boolean}\n     */\n    this.temporary = 'temporary' in data ? data.temporary : null;\n\n    /**\n     * The maximum age of the invite, in seconds, 0 if never expires\n     * @type {?number}\n     */\n    this.maxAge = 'max_age' in data ? data.max_age : null;\n\n    /**\n     * How many times this invite has been used\n     * @type {?number}\n     */\n    this.uses = 'uses' in data ? data.uses : null;\n\n    /**\n     * The maximum uses of this invite\n     * @type {?number}\n     */\n    this.maxUses = 'max_uses' in data ? data.max_uses : null;\n\n    /**\n     * The user who created this invite\n     * @type {?User}\n     */\n    this.inviter = data.inviter ? this.client.users.add(data.inviter) : null;\n\n    /**\n     * The target user for this invite\n     * @type {?User}\n     */\n    this.targetUser = data.target_user ? this.client.users.add(data.target_user) : null;\n\n    /**\n     * The type of the target user:\n     * * 1: STREAM\n     * @typedef {number} TargetUser\n     */\n\n    /**\n     * The target user type\n     * @type {?TargetUser}\n     */\n    this.targetUserType = typeof data.target_user_type === 'number' ? data.target_user_type : null;\n\n    /**\n     * The channel the invite is for\n     * @type {Channel}\n     */\n    this.channel = this.client.channels.add(data.channel, this.guild, false);\n\n    /**\n     * The timestamp the invite was created at\n     * @type {?number}\n     */\n    this.createdTimestamp = 'created_at' in data ? new Date(data.created_at).getTime() : null;\n  }\n\n  /**\n   * The time the invite was created at\n   * @type {?Date}\n   * @readonly\n   */\n  get createdAt() {\n    return this.createdTimestamp ? new Date(this.createdTimestamp) : null;\n  }\n\n  /**\n   * Whether the invite is deletable by the client user\n   * @type {boolean}\n   * @readonly\n   */\n  get deletable() {\n    const guild = this.guild;\n    if (!guild || !this.client.guilds.cache.has(guild.id)) return false;\n    if (!guild.me) throw new Error('GUILD_UNCACHED_ME');\n    return (\n      this.channel.permissionsFor(this.client.user).has(Permissions.FLAGS.MANAGE_CHANNELS, false) ||\n      guild.me.permissions.has(Permissions.FLAGS.MANAGE_GUILD)\n    );\n  }\n\n  /**\n   * The timestamp the invite will expire at\n   * @type {?number}\n   * @readonly\n   */\n  get expiresTimestamp() {\n    return this.createdTimestamp && this.maxAge ? this.createdTimestamp + this.maxAge * 1000 : null;\n  }\n\n  /**\n   * The time the invite will expire at\n   * @type {?Date}\n   * @readonly\n   */\n  get expiresAt() {\n    const { expiresTimestamp } = this;\n    return expiresTimestamp ? new Date(expiresTimestamp) : null;\n  }\n\n  /**\n   * The URL to the invite\n   * @type {string}\n   * @readonly\n   */\n  get url() {\n    return Endpoints.invite(this.client.options.http.invite, this.code);\n  }\n\n  /**\n   * Deletes this invite.\n   * @param {string} [reason] Reason for deleting this invite\n   * @returns {Promise<Invite>}\n   */\n  delete(reason) {\n    return this.client.api.invites[this.code].delete({ reason }).then(() => this);\n  }\n\n  /**\n   * When concatenated with a string, this automatically concatenates the invite's URL instead of the object.\n   * @returns {string}\n   * @example\n   * // Logs: Invite: https://discord.gg/A1b2C3\n   * console.log(`Invite: ${invite}`);\n   */\n  toString() {\n    return this.url;\n  }\n\n  toJSON() {\n    return super.toJSON({\n      url: true,\n      expiresTimestamp: true,\n      presenceCount: false,\n      memberCount: false,\n      uses: false,\n      channel: 'channelID',\n      inviter: 'inviterID',\n      guild: 'guildID',\n    });\n  }\n\n  valueOf() {\n    return this.code;\n  }\n}\n\nmodule.exports = Invite;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}