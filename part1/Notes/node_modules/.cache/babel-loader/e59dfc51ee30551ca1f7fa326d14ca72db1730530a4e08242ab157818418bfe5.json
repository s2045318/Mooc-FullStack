{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst DMChannel = require('../../structures/DMChannel');\nconst {\n  Events\n} = require('../../util/Constants');\nclass ChannelDeleteAction extends Action {\n  constructor(client) {\n    super(client);\n    this.deleted = new Map();\n  }\n  handle(data) {\n    const client = this.client;\n    let channel = client.channels.cache.get(data.id);\n    if (channel) {\n      client.channels.remove(channel.id);\n      channel.deleted = true;\n      if (channel.messages && !(channel instanceof DMChannel)) {\n        for (const message of channel.messages.cache.values()) {\n          message.deleted = true;\n        }\n      }\n      /**\n       * Emitted whenever a channel is deleted.\n       * @event Client#channelDelete\n       * @param {DMChannel|GuildChannel} channel The channel that was deleted\n       */\n      client.emit(Events.CHANNEL_DELETE, channel);\n    }\n    return {\n      channel\n    };\n  }\n}\nmodule.exports = ChannelDeleteAction;","map":{"version":3,"names":["Action","require","DMChannel","Events","ChannelDeleteAction","constructor","client","deleted","Map","handle","data","channel","channels","cache","get","id","remove","messages","message","values","emit","CHANNEL_DELETE","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/client/actions/ChannelDelete.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst DMChannel = require('../../structures/DMChannel');\nconst { Events } = require('../../util/Constants');\n\nclass ChannelDeleteAction extends Action {\n  constructor(client) {\n    super(client);\n    this.deleted = new Map();\n  }\n\n  handle(data) {\n    const client = this.client;\n    let channel = client.channels.cache.get(data.id);\n\n    if (channel) {\n      client.channels.remove(channel.id);\n      channel.deleted = true;\n      if (channel.messages && !(channel instanceof DMChannel)) {\n        for (const message of channel.messages.cache.values()) {\n          message.deleted = true;\n        }\n      }\n      /**\n       * Emitted whenever a channel is deleted.\n       * @event Client#channelDelete\n       * @param {DMChannel|GuildChannel} channel The channel that was deleted\n       */\n      client.emit(Events.CHANNEL_DELETE, channel);\n    }\n\n    return { channel };\n  }\n}\n\nmodule.exports = ChannelDeleteAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,SAAS,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACvD,MAAM;EAAEE;AAAO,CAAC,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAElD,MAAMG,mBAAmB,SAASJ,MAAM,CAAC;EACvCK,WAAW,CAACC,MAAM,EAAE;IAClB,KAAK,CAACA,MAAM,CAAC;IACb,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAG,EAAE;EAC1B;EAEAC,MAAM,CAACC,IAAI,EAAE;IACX,MAAMJ,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAIK,OAAO,GAAGL,MAAM,CAACM,QAAQ,CAACC,KAAK,CAACC,GAAG,CAACJ,IAAI,CAACK,EAAE,CAAC;IAEhD,IAAIJ,OAAO,EAAE;MACXL,MAAM,CAACM,QAAQ,CAACI,MAAM,CAACL,OAAO,CAACI,EAAE,CAAC;MAClCJ,OAAO,CAACJ,OAAO,GAAG,IAAI;MACtB,IAAII,OAAO,CAACM,QAAQ,IAAI,EAAEN,OAAO,YAAYT,SAAS,CAAC,EAAE;QACvD,KAAK,MAAMgB,OAAO,IAAIP,OAAO,CAACM,QAAQ,CAACJ,KAAK,CAACM,MAAM,EAAE,EAAE;UACrDD,OAAO,CAACX,OAAO,GAAG,IAAI;QACxB;MACF;MACA;AACN;AACA;AACA;AACA;MACMD,MAAM,CAACc,IAAI,CAACjB,MAAM,CAACkB,cAAc,EAAEV,OAAO,CAAC;IAC7C;IAEA,OAAO;MAAEA;IAAQ,CAAC;EACpB;AACF;AAEAW,MAAM,CAACC,OAAO,GAAGnB,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}