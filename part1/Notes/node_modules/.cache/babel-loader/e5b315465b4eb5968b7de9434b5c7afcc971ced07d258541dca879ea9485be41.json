{"ast":null,"code":"'use strict';\n\nconst Collection = require('./Collection.js');\n\n/**\n * A Collection which holds a max amount of entries. The first key is deleted if the Collection has\n * reached max size.\n * @extends {Collection}\n * @param {number} [maxSize=0] The maximum size of the Collection\n * @param {Iterable} [iterable=null] Optional entries passed to the Map constructor.\n * @private\n */\nclass LimitedCollection extends Collection {\n  constructor() {\n    let maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let iterable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(iterable);\n    /**\n     * The max size of the Collection.\n     * @type {number}\n     */\n    this.maxSize = maxSize;\n  }\n  set(key, value) {\n    if (this.maxSize === 0) return this;\n    if (this.size >= this.maxSize && !this.has(key)) this.delete(this.firstKey());\n    return super.set(key, value);\n  }\n  static get [Symbol.species]() {\n    return Collection;\n  }\n}\nmodule.exports = LimitedCollection;","map":{"version":3,"names":["Collection","require","LimitedCollection","constructor","maxSize","iterable","set","key","value","size","has","delete","firstKey","Symbol","species","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/util/LimitedCollection.js"],"sourcesContent":["'use strict';\n\nconst Collection = require('./Collection.js');\n\n/**\n * A Collection which holds a max amount of entries. The first key is deleted if the Collection has\n * reached max size.\n * @extends {Collection}\n * @param {number} [maxSize=0] The maximum size of the Collection\n * @param {Iterable} [iterable=null] Optional entries passed to the Map constructor.\n * @private\n */\nclass LimitedCollection extends Collection {\n  constructor(maxSize = 0, iterable = null) {\n    super(iterable);\n    /**\n     * The max size of the Collection.\n     * @type {number}\n     */\n    this.maxSize = maxSize;\n  }\n\n  set(key, value) {\n    if (this.maxSize === 0) return this;\n    if (this.size >= this.maxSize && !this.has(key)) this.delete(this.firstKey());\n    return super.set(key, value);\n  }\n\n  static get [Symbol.species]() {\n    return Collection;\n  }\n}\n\nmodule.exports = LimitedCollection;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,SAASF,UAAU,CAAC;EACzCG,WAAW,GAA+B;IAAA,IAA9BC,OAAO,uEAAG,CAAC;IAAA,IAAEC,QAAQ,uEAAG,IAAI;IACtC,KAAK,CAACA,QAAQ,CAAC;IACf;AACJ;AACA;AACA;IACI,IAAI,CAACD,OAAO,GAAGA,OAAO;EACxB;EAEAE,GAAG,CAACC,GAAG,EAAEC,KAAK,EAAE;IACd,IAAI,IAAI,CAACJ,OAAO,KAAK,CAAC,EAAE,OAAO,IAAI;IACnC,IAAI,IAAI,CAACK,IAAI,IAAI,IAAI,CAACL,OAAO,IAAI,CAAC,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,EAAE,IAAI,CAACI,MAAM,CAAC,IAAI,CAACC,QAAQ,EAAE,CAAC;IAC7E,OAAO,KAAK,CAACN,GAAG,CAACC,GAAG,EAAEC,KAAK,CAAC;EAC9B;EAEA,YAAYK,MAAM,CAACC,OAAO,IAAI;IAC5B,OAAOd,UAAU;EACnB;AACF;AAEAe,MAAM,CAACC,OAAO,GAAGd,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}