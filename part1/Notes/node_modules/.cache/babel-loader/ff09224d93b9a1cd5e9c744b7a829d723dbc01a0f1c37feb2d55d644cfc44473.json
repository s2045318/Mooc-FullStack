{"ast":null,"code":"'use strict';\n\nlet ClientUser;\nmodule.exports = (client, _ref, shard) => {\n  let {\n    d: data\n  } = _ref;\n  if (client.user) {\n    client.user._patch(data.user);\n  } else {\n    if (!ClientUser) ClientUser = require('../../../structures/ClientUser');\n    const clientUser = new ClientUser(client, data.user);\n    client.user = clientUser;\n    client.users.cache.set(clientUser.id, clientUser);\n  }\n  for (const guild of data.guilds) {\n    guild.shardID = shard.id;\n    client.guilds.add(guild);\n  }\n  shard.checkReady();\n};","map":{"version":3,"names":["ClientUser","module","exports","client","shard","d","data","user","_patch","require","clientUser","users","cache","set","id","guild","guilds","shardID","add","checkReady"],"sources":["/Users/jessegill/node_modules/discord.js/src/client/websocket/handlers/READY.js"],"sourcesContent":["'use strict';\n\nlet ClientUser;\n\nmodule.exports = (client, { d: data }, shard) => {\n  if (client.user) {\n    client.user._patch(data.user);\n  } else {\n    if (!ClientUser) ClientUser = require('../../../structures/ClientUser');\n    const clientUser = new ClientUser(client, data.user);\n    client.user = clientUser;\n    client.users.cache.set(clientUser.id, clientUser);\n  }\n\n  for (const guild of data.guilds) {\n    guild.shardID = shard.id;\n    client.guilds.add(guild);\n  }\n\n  shard.checkReady();\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU;AAEdC,MAAM,CAACC,OAAO,GAAG,CAACC,MAAM,QAAeC,KAAK,KAAK;EAAA,IAAvB;IAAEC,CAAC,EAAEC;EAAK,CAAC;EACnC,IAAIH,MAAM,CAACI,IAAI,EAAE;IACfJ,MAAM,CAACI,IAAI,CAACC,MAAM,CAACF,IAAI,CAACC,IAAI,CAAC;EAC/B,CAAC,MAAM;IACL,IAAI,CAACP,UAAU,EAAEA,UAAU,GAAGS,OAAO,CAAC,gCAAgC,CAAC;IACvE,MAAMC,UAAU,GAAG,IAAIV,UAAU,CAACG,MAAM,EAAEG,IAAI,CAACC,IAAI,CAAC;IACpDJ,MAAM,CAACI,IAAI,GAAGG,UAAU;IACxBP,MAAM,CAACQ,KAAK,CAACC,KAAK,CAACC,GAAG,CAACH,UAAU,CAACI,EAAE,EAAEJ,UAAU,CAAC;EACnD;EAEA,KAAK,MAAMK,KAAK,IAAIT,IAAI,CAACU,MAAM,EAAE;IAC/BD,KAAK,CAACE,OAAO,GAAGb,KAAK,CAACU,EAAE;IACxBX,MAAM,CAACa,MAAM,CAACE,GAAG,CAACH,KAAK,CAAC;EAC1B;EAEAX,KAAK,CAACe,UAAU,EAAE;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}