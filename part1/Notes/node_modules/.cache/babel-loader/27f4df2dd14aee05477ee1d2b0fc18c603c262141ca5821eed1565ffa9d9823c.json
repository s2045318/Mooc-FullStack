{"ast":null,"code":"'use strict';\n\nconst Base = require('./Base');\nconst {\n  MembershipStates\n} = require('../util/Constants');\n\n/**\n * Represents a Client OAuth2 Application Team Member.\n * @extends {Base}\n */\nclass TeamMember extends Base {\n  constructor(team, data) {\n    super(team.client);\n\n    /**\n     * The Team this member is part of\n     * @type {Team}\n     */\n    this.team = team;\n    this._patch(data);\n  }\n  _patch(data) {\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {string[]}\n     */\n    this.permissions = data.permissions;\n\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {MembershipStates}\n     */\n    this.membershipState = MembershipStates[data.membership_state];\n\n    /**\n     * The user for this Team Member\n     * @type {User}\n     */\n    this.user = this.client.users.add(data.user);\n  }\n\n  /**\n   * The ID of the Team Member\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the team members's mention instead of the\n   * TeamMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Team Member's mention: <@123456789012345678>\n   * console.log(`Team Member's mention: ${teamMember}`);\n   */\n  toString() {\n    return this.user.toString();\n  }\n}\nmodule.exports = TeamMember;","map":{"version":3,"names":["Base","require","MembershipStates","TeamMember","constructor","team","data","client","_patch","permissions","membershipState","membership_state","user","users","add","id","toString","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/structures/TeamMember.js"],"sourcesContent":["'use strict';\n\nconst Base = require('./Base');\nconst { MembershipStates } = require('../util/Constants');\n\n/**\n * Represents a Client OAuth2 Application Team Member.\n * @extends {Base}\n */\nclass TeamMember extends Base {\n  constructor(team, data) {\n    super(team.client);\n\n    /**\n     * The Team this member is part of\n     * @type {Team}\n     */\n    this.team = team;\n\n    this._patch(data);\n  }\n\n  _patch(data) {\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {string[]}\n     */\n    this.permissions = data.permissions;\n\n    /**\n     * The permissions this Team Member has with regard to the team\n     * @type {MembershipStates}\n     */\n    this.membershipState = MembershipStates[data.membership_state];\n\n    /**\n     * The user for this Team Member\n     * @type {User}\n     */\n    this.user = this.client.users.add(data.user);\n  }\n\n  /**\n   * The ID of the Team Member\n   * @type {Snowflake}\n   * @readonly\n   */\n  get id() {\n    return this.user.id;\n  }\n\n  /**\n   * When concatenated with a string, this automatically returns the team members's mention instead of the\n   * TeamMember object.\n   * @returns {string}\n   * @example\n   * // Logs: Team Member's mention: <@123456789012345678>\n   * console.log(`Team Member's mention: ${teamMember}`);\n   */\n  toString() {\n    return this.user.toString();\n  }\n}\n\nmodule.exports = TeamMember;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAM;EAAEC;AAAiB,CAAC,GAAGD,OAAO,CAAC,mBAAmB,CAAC;;AAEzD;AACA;AACA;AACA;AACA,MAAME,UAAU,SAASH,IAAI,CAAC;EAC5BI,WAAW,CAACC,IAAI,EAAEC,IAAI,EAAE;IACtB,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC;;IAElB;AACJ;AACA;AACA;IACI,IAAI,CAACF,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAACG,MAAM,CAACF,IAAI,CAAC;EACnB;EAEAE,MAAM,CAACF,IAAI,EAAE;IACX;AACJ;AACA;AACA;IACI,IAAI,CAACG,WAAW,GAAGH,IAAI,CAACG,WAAW;;IAEnC;AACJ;AACA;AACA;IACI,IAAI,CAACC,eAAe,GAAGR,gBAAgB,CAACI,IAAI,CAACK,gBAAgB,CAAC;;IAE9D;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,MAAM,CAACM,KAAK,CAACC,GAAG,CAACR,IAAI,CAACM,IAAI,CAAC;EAC9C;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIG,EAAE,GAAG;IACP,OAAO,IAAI,CAACH,IAAI,CAACG,EAAE;EACrB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,GAAG;IACT,OAAO,IAAI,CAACJ,IAAI,CAACI,QAAQ,EAAE;EAC7B;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGf,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}