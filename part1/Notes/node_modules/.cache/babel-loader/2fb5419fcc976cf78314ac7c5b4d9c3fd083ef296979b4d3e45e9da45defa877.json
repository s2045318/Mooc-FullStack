{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst {\n  Events\n} = require('../../util/Constants');\nclass MessageCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    if (channel) {\n      const existing = channel.messages.cache.get(data.id);\n      if (existing) return {\n        message: existing\n      };\n      const message = channel.messages.add(data);\n      const user = message.author;\n      let member = message.member;\n      channel.lastMessageID = data.id;\n      if (user) {\n        user.lastMessageID = data.id;\n        user.lastMessageChannelID = channel.id;\n      }\n      if (member) {\n        member.lastMessageID = data.id;\n        member.lastMessageChannelID = channel.id;\n      }\n\n      /**\n       * Emitted whenever a message is created.\n       * @event Client#message\n       * @param {Message} message The created message\n       */\n      client.emit(Events.MESSAGE_CREATE, message);\n      return {\n        message\n      };\n    }\n    return {};\n  }\n}\nmodule.exports = MessageCreateAction;","map":{"version":3,"names":["Action","require","Events","MessageCreateAction","handle","data","client","channel","channels","cache","get","channel_id","existing","messages","id","message","add","user","author","member","lastMessageID","lastMessageChannelID","emit","MESSAGE_CREATE","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/client/actions/MessageCreate.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass MessageCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    if (channel) {\n      const existing = channel.messages.cache.get(data.id);\n      if (existing) return { message: existing };\n      const message = channel.messages.add(data);\n      const user = message.author;\n      let member = message.member;\n      channel.lastMessageID = data.id;\n      if (user) {\n        user.lastMessageID = data.id;\n        user.lastMessageChannelID = channel.id;\n      }\n      if (member) {\n        member.lastMessageID = data.id;\n        member.lastMessageChannelID = channel.id;\n      }\n\n      /**\n       * Emitted whenever a message is created.\n       * @event Client#message\n       * @param {Message} message The created message\n       */\n      client.emit(Events.MESSAGE_CREATE, message);\n      return { message };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = MessageCreateAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAM;EAAEC;AAAO,CAAC,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAElD,MAAME,mBAAmB,SAASH,MAAM,CAAC;EACvCI,MAAM,CAACC,IAAI,EAAE;IACX,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,QAAQ,CAACC,KAAK,CAACC,GAAG,CAACL,IAAI,CAACM,UAAU,CAAC;IAC1D,IAAIJ,OAAO,EAAE;MACX,MAAMK,QAAQ,GAAGL,OAAO,CAACM,QAAQ,CAACJ,KAAK,CAACC,GAAG,CAACL,IAAI,CAACS,EAAE,CAAC;MACpD,IAAIF,QAAQ,EAAE,OAAO;QAAEG,OAAO,EAAEH;MAAS,CAAC;MAC1C,MAAMG,OAAO,GAAGR,OAAO,CAACM,QAAQ,CAACG,GAAG,CAACX,IAAI,CAAC;MAC1C,MAAMY,IAAI,GAAGF,OAAO,CAACG,MAAM;MAC3B,IAAIC,MAAM,GAAGJ,OAAO,CAACI,MAAM;MAC3BZ,OAAO,CAACa,aAAa,GAAGf,IAAI,CAACS,EAAE;MAC/B,IAAIG,IAAI,EAAE;QACRA,IAAI,CAACG,aAAa,GAAGf,IAAI,CAACS,EAAE;QAC5BG,IAAI,CAACI,oBAAoB,GAAGd,OAAO,CAACO,EAAE;MACxC;MACA,IAAIK,MAAM,EAAE;QACVA,MAAM,CAACC,aAAa,GAAGf,IAAI,CAACS,EAAE;QAC9BK,MAAM,CAACE,oBAAoB,GAAGd,OAAO,CAACO,EAAE;MAC1C;;MAEA;AACN;AACA;AACA;AACA;MACMR,MAAM,CAACgB,IAAI,CAACpB,MAAM,CAACqB,cAAc,EAAER,OAAO,CAAC;MAC3C,OAAO;QAAEA;MAAQ,CAAC;IACpB;IAEA,OAAO,CAAC,CAAC;EACX;AACF;AAEAS,MAAM,CAACC,OAAO,GAAGtB,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}