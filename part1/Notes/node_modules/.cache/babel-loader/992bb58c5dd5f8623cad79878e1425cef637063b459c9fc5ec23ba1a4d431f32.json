{"ast":null,"code":"'use strict';\n\nrequire('setimmediate');\nconst EventEmitter = require('events');\nconst RESTManager = require('../rest/RESTManager');\nconst {\n  DefaultOptions\n} = require('../util/Constants');\nconst Util = require('../util/Util');\n\n/**\n * The base class for all clients.\n * @extends {EventEmitter}\n */\nclass BaseClient extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n\n    /**\n     * Timeouts set by {@link BaseClient#setTimeout} that are still active\n     * @type {Set<Timeout>}\n     * @private\n     */\n    this._timeouts = new Set();\n\n    /**\n     * Intervals set by {@link BaseClient#setInterval} that are still active\n     * @type {Set<Timeout>}\n     * @private\n     */\n    this._intervals = new Set();\n\n    /**\n     * Intervals set by {@link BaseClient#setImmediate} that are still active\n     * @type {Set<Immediate>}\n     * @private\n     */\n    this._immediates = new Set();\n\n    /**\n     * The options the client was instantiated with\n     * @type {ClientOptions}\n     */\n    this.options = Util.mergeDefault(DefaultOptions, options);\n\n    /**\n     * The REST manager of the client\n     * @type {RESTManager}\n     * @private\n     */\n    this.rest = new RESTManager(this, options._tokenType);\n  }\n\n  /**\n   * API shortcut\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  get api() {\n    return this.rest.api;\n  }\n\n  /**\n   * Destroys all assets used by the base client.\n   */\n  destroy() {\n    for (const t of this._timeouts) this.clearTimeout(t);\n    for (const i of this._intervals) this.clearInterval(i);\n    for (const i of this._immediates) this.clearImmediate(i);\n    this._timeouts.clear();\n    this._intervals.clear();\n    this._immediates.clear();\n  }\n\n  /**\n   * Sets a timeout that will be automatically cancelled if the client is destroyed.\n   * @param {Function} fn Function to execute\n   * @param {number} delay Time to wait before executing (in milliseconds)\n   * @param {...*} args Arguments for the function\n   * @returns {Timeout}\n   */\n  setTimeout(fn, delay) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    const timeout = setTimeout(() => {\n      fn(...args);\n      this._timeouts.delete(timeout);\n    }, delay);\n    this._timeouts.add(timeout);\n    return timeout;\n  }\n\n  /**\n   * Clears a timeout.\n   * @param {Timeout} timeout Timeout to cancel\n   */\n  clearTimeout(timeout) {\n    clearTimeout(timeout);\n    this._timeouts.delete(timeout);\n  }\n\n  /**\n   * Sets an interval that will be automatically cancelled if the client is destroyed.\n   * @param {Function} fn Function to execute\n   * @param {number} delay Time to wait between executions (in milliseconds)\n   * @param {...*} args Arguments for the function\n   * @returns {Timeout}\n   */\n  setInterval(fn, delay) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n    const interval = setInterval(fn, delay, ...args);\n    this._intervals.add(interval);\n    return interval;\n  }\n\n  /**\n   * Clears an interval.\n   * @param {Timeout} interval Interval to cancel\n   */\n  clearInterval(interval) {\n    clearInterval(interval);\n    this._intervals.delete(interval);\n  }\n\n  /**\n   * Sets an immediate that will be automatically cancelled if the client is destroyed.\n   * @param {Function} fn Function to execute\n   * @param {...*} args Arguments for the function\n   * @returns {Immediate}\n   */\n  setImmediate(fn) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    const immediate = setImmediate(fn, ...args);\n    this._immediates.add(immediate);\n    return immediate;\n  }\n\n  /**\n   * Clears an immediate.\n   * @param {Immediate} immediate Immediate to cancel\n   */\n  clearImmediate(immediate) {\n    clearImmediate(immediate);\n    this._immediates.delete(immediate);\n  }\n\n  /**\n   * Increments max listeners by one, if they are not zero.\n   * @private\n   */\n  incrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners + 1);\n    }\n  }\n\n  /**\n   * Decrements max listeners by one, if they are not zero.\n   * @private\n   */\n  decrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners - 1);\n    }\n  }\n  toJSON() {\n    for (var _len4 = arguments.length, props = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      props[_key4] = arguments[_key4];\n    }\n    return Util.flatten(this, {\n      domain: false\n    }, ...props);\n  }\n}\nmodule.exports = BaseClient;","map":{"version":3,"names":["require","EventEmitter","RESTManager","DefaultOptions","Util","BaseClient","constructor","options","_timeouts","Set","_intervals","_immediates","mergeDefault","rest","_tokenType","api","destroy","t","clearTimeout","i","clearInterval","clearImmediate","clear","setTimeout","fn","delay","args","timeout","delete","add","setInterval","interval","setImmediate","immediate","incrementMaxListeners","maxListeners","getMaxListeners","setMaxListeners","decrementMaxListeners","toJSON","props","flatten","domain","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/client/BaseClient.js"],"sourcesContent":["'use strict';\n\nrequire('setimmediate');\nconst EventEmitter = require('events');\nconst RESTManager = require('../rest/RESTManager');\nconst { DefaultOptions } = require('../util/Constants');\nconst Util = require('../util/Util');\n\n/**\n * The base class for all clients.\n * @extends {EventEmitter}\n */\nclass BaseClient extends EventEmitter {\n  constructor(options = {}) {\n    super();\n\n    /**\n     * Timeouts set by {@link BaseClient#setTimeout} that are still active\n     * @type {Set<Timeout>}\n     * @private\n     */\n    this._timeouts = new Set();\n\n    /**\n     * Intervals set by {@link BaseClient#setInterval} that are still active\n     * @type {Set<Timeout>}\n     * @private\n     */\n    this._intervals = new Set();\n\n    /**\n     * Intervals set by {@link BaseClient#setImmediate} that are still active\n     * @type {Set<Immediate>}\n     * @private\n     */\n    this._immediates = new Set();\n\n    /**\n     * The options the client was instantiated with\n     * @type {ClientOptions}\n     */\n    this.options = Util.mergeDefault(DefaultOptions, options);\n\n    /**\n     * The REST manager of the client\n     * @type {RESTManager}\n     * @private\n     */\n    this.rest = new RESTManager(this, options._tokenType);\n  }\n\n  /**\n   * API shortcut\n   * @type {Object}\n   * @readonly\n   * @private\n   */\n  get api() {\n    return this.rest.api;\n  }\n\n  /**\n   * Destroys all assets used by the base client.\n   */\n  destroy() {\n    for (const t of this._timeouts) this.clearTimeout(t);\n    for (const i of this._intervals) this.clearInterval(i);\n    for (const i of this._immediates) this.clearImmediate(i);\n    this._timeouts.clear();\n    this._intervals.clear();\n    this._immediates.clear();\n  }\n\n  /**\n   * Sets a timeout that will be automatically cancelled if the client is destroyed.\n   * @param {Function} fn Function to execute\n   * @param {number} delay Time to wait before executing (in milliseconds)\n   * @param {...*} args Arguments for the function\n   * @returns {Timeout}\n   */\n  setTimeout(fn, delay, ...args) {\n    const timeout = setTimeout(() => {\n      fn(...args);\n      this._timeouts.delete(timeout);\n    }, delay);\n    this._timeouts.add(timeout);\n    return timeout;\n  }\n\n  /**\n   * Clears a timeout.\n   * @param {Timeout} timeout Timeout to cancel\n   */\n  clearTimeout(timeout) {\n    clearTimeout(timeout);\n    this._timeouts.delete(timeout);\n  }\n\n  /**\n   * Sets an interval that will be automatically cancelled if the client is destroyed.\n   * @param {Function} fn Function to execute\n   * @param {number} delay Time to wait between executions (in milliseconds)\n   * @param {...*} args Arguments for the function\n   * @returns {Timeout}\n   */\n  setInterval(fn, delay, ...args) {\n    const interval = setInterval(fn, delay, ...args);\n    this._intervals.add(interval);\n    return interval;\n  }\n\n  /**\n   * Clears an interval.\n   * @param {Timeout} interval Interval to cancel\n   */\n  clearInterval(interval) {\n    clearInterval(interval);\n    this._intervals.delete(interval);\n  }\n\n  /**\n   * Sets an immediate that will be automatically cancelled if the client is destroyed.\n   * @param {Function} fn Function to execute\n   * @param {...*} args Arguments for the function\n   * @returns {Immediate}\n   */\n  setImmediate(fn, ...args) {\n    const immediate = setImmediate(fn, ...args);\n    this._immediates.add(immediate);\n    return immediate;\n  }\n\n  /**\n   * Clears an immediate.\n   * @param {Immediate} immediate Immediate to cancel\n   */\n  clearImmediate(immediate) {\n    clearImmediate(immediate);\n    this._immediates.delete(immediate);\n  }\n\n  /**\n   * Increments max listeners by one, if they are not zero.\n   * @private\n   */\n  incrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners + 1);\n    }\n  }\n\n  /**\n   * Decrements max listeners by one, if they are not zero.\n   * @private\n   */\n  decrementMaxListeners() {\n    const maxListeners = this.getMaxListeners();\n    if (maxListeners !== 0) {\n      this.setMaxListeners(maxListeners - 1);\n    }\n  }\n\n  toJSON(...props) {\n    return Util.flatten(this, { domain: false }, ...props);\n  }\n}\n\nmodule.exports = BaseClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}