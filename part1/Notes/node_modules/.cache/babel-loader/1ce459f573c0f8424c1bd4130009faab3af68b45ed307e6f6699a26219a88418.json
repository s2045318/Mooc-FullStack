{"ast":null,"code":"'use strict';\n\nconst Util = require('../util/Util');\n\n/**\n * Represents an attachment in a message.\n */\nclass MessageAttachment {\n  /**\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @param {Object} [data] Extra data\n   */\n  constructor(attachment) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let data = arguments.length > 2 ? arguments[2] : undefined;\n    this.attachment = attachment;\n    /**\n     * The name of this attachment\n     * @type {?string}\n     */\n    this.name = name;\n    if (data) this._patch(data);\n  }\n\n  /**\n   * Sets the file of this attachment.\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @returns {MessageAttachment} This attachment\n   */\n  setFile(attachment) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    this.attachment = attachment;\n    this.name = name;\n    return this;\n  }\n\n  /**\n   * Sets the name of this attachment.\n   * @param {string} name The name of the file\n   * @returns {MessageAttachment} This attachment\n   */\n  setName(name) {\n    this.name = name;\n    return this;\n  }\n  _patch(data) {\n    /**\n     * The ID of this attachment\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The size of this attachment in bytes\n     * @type {number}\n     */\n    this.size = data.size;\n\n    /**\n     * The URL to this attachment\n     * @type {string}\n     */\n    this.url = data.url;\n\n    /**\n     * The Proxy URL to this attachment\n     * @type {string}\n     */\n    this.proxyURL = data.proxy_url;\n\n    /**\n     * The height of this attachment (if an image or video)\n     * @type {?number}\n     */\n    this.height = typeof data.height !== 'undefined' ? data.height : null;\n\n    /**\n     * The width of this attachment (if an image or video)\n     * @type {?number}\n     */\n    this.width = typeof data.width !== 'undefined' ? data.width : null;\n  }\n\n  /**\n   * Whether or not this attachment has been marked as a spoiler\n   * @type {boolean}\n   * @readonly\n   */\n  get spoiler() {\n    return Util.basename(this.url).startsWith('SPOILER_');\n  }\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\nmodule.exports = MessageAttachment;","map":{"version":3,"names":["Util","require","MessageAttachment","constructor","attachment","name","data","_patch","setFile","setName","id","size","url","proxyURL","proxy_url","height","width","spoiler","basename","startsWith","toJSON","flatten","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/structures/MessageAttachment.js"],"sourcesContent":["'use strict';\n\nconst Util = require('../util/Util');\n\n/**\n * Represents an attachment in a message.\n */\nclass MessageAttachment {\n  /**\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @param {Object} [data] Extra data\n   */\n  constructor(attachment, name = null, data) {\n    this.attachment = attachment;\n    /**\n     * The name of this attachment\n     * @type {?string}\n     */\n    this.name = name;\n    if (data) this._patch(data);\n  }\n\n  /**\n   * Sets the file of this attachment.\n   * @param {BufferResolvable|Stream} attachment The file\n   * @param {string} [name=null] The name of the file, if any\n   * @returns {MessageAttachment} This attachment\n   */\n  setFile(attachment, name = null) {\n    this.attachment = attachment;\n    this.name = name;\n    return this;\n  }\n\n  /**\n   * Sets the name of this attachment.\n   * @param {string} name The name of the file\n   * @returns {MessageAttachment} This attachment\n   */\n  setName(name) {\n    this.name = name;\n    return this;\n  }\n\n  _patch(data) {\n    /**\n     * The ID of this attachment\n     * @type {Snowflake}\n     */\n    this.id = data.id;\n\n    /**\n     * The size of this attachment in bytes\n     * @type {number}\n     */\n    this.size = data.size;\n\n    /**\n     * The URL to this attachment\n     * @type {string}\n     */\n    this.url = data.url;\n\n    /**\n     * The Proxy URL to this attachment\n     * @type {string}\n     */\n    this.proxyURL = data.proxy_url;\n\n    /**\n     * The height of this attachment (if an image or video)\n     * @type {?number}\n     */\n    this.height = typeof data.height !== 'undefined' ? data.height : null;\n\n    /**\n     * The width of this attachment (if an image or video)\n     * @type {?number}\n     */\n    this.width = typeof data.width !== 'undefined' ? data.width : null;\n  }\n\n  /**\n   * Whether or not this attachment has been marked as a spoiler\n   * @type {boolean}\n   * @readonly\n   */\n  get spoiler() {\n    return Util.basename(this.url).startsWith('SPOILER_');\n  }\n\n  toJSON() {\n    return Util.flatten(this);\n  }\n}\n\nmodule.exports = MessageAttachment;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,cAAc,CAAC;;AAEpC;AACA;AACA;AACA,MAAMC,iBAAiB,CAAC;EACtB;AACF;AACA;AACA;AACA;EACEC,WAAW,CAACC,UAAU,EAAqB;IAAA,IAAnBC,IAAI,uEAAG,IAAI;IAAA,IAAEC,IAAI;IACvC,IAAI,CAACF,UAAU,GAAGA,UAAU;IAC5B;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAIC,IAAI,EAAE,IAAI,CAACC,MAAM,CAACD,IAAI,CAAC;EAC7B;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEE,OAAO,CAACJ,UAAU,EAAe;IAAA,IAAbC,IAAI,uEAAG,IAAI;IAC7B,IAAI,CAACD,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;EACEI,OAAO,CAACJ,IAAI,EAAE;IACZ,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,OAAO,IAAI;EACb;EAEAE,MAAM,CAACD,IAAI,EAAE;IACX;AACJ;AACA;AACA;IACI,IAAI,CAACI,EAAE,GAAGJ,IAAI,CAACI,EAAE;;IAEjB;AACJ;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAGL,IAAI,CAACK,IAAI;;IAErB;AACJ;AACA;AACA;IACI,IAAI,CAACC,GAAG,GAAGN,IAAI,CAACM,GAAG;;IAEnB;AACJ;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGP,IAAI,CAACQ,SAAS;;IAE9B;AACJ;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,OAAOT,IAAI,CAACS,MAAM,KAAK,WAAW,GAAGT,IAAI,CAACS,MAAM,GAAG,IAAI;;IAErE;AACJ;AACA;AACA;IACI,IAAI,CAACC,KAAK,GAAG,OAAOV,IAAI,CAACU,KAAK,KAAK,WAAW,GAAGV,IAAI,CAACU,KAAK,GAAG,IAAI;EACpE;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIC,OAAO,GAAG;IACZ,OAAOjB,IAAI,CAACkB,QAAQ,CAAC,IAAI,CAACN,GAAG,CAAC,CAACO,UAAU,CAAC,UAAU,CAAC;EACvD;EAEAC,MAAM,GAAG;IACP,OAAOpB,IAAI,CAACqB,OAAO,CAAC,IAAI,CAAC;EAC3B;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGrB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}