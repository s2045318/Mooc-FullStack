{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\nconst Channel = require('../../structures/Channel');\nconst {\n  ChannelTypes\n} = require('../../util/Constants');\nclass ChannelUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    let channel = client.channels.cache.get(data.id);\n    if (channel) {\n      const old = channel._update(data);\n      if (ChannelTypes[channel.type.toUpperCase()] !== data.type) {\n        const newChannel = Channel.create(this.client, data, channel.guild);\n        for (const [id, message] of channel.messages.cache) newChannel.messages.cache.set(id, message);\n        newChannel._typing = new Map(channel._typing);\n        channel = newChannel;\n        this.client.channels.cache.set(channel.id, channel);\n      }\n      return {\n        old,\n        updated: channel\n      };\n    }\n    return {};\n  }\n}\nmodule.exports = ChannelUpdateAction;","map":{"version":3,"names":["Action","require","Channel","ChannelTypes","ChannelUpdateAction","handle","data","client","channel","channels","cache","get","id","old","_update","type","toUpperCase","newChannel","create","guild","message","messages","set","_typing","Map","updated","module","exports"],"sources":["/Users/jessegill/node_modules/discord.js/src/client/actions/ChannelUpdate.js"],"sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Channel = require('../../structures/Channel');\nconst { ChannelTypes } = require('../../util/Constants');\n\nclass ChannelUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    let channel = client.channels.cache.get(data.id);\n    if (channel) {\n      const old = channel._update(data);\n\n      if (ChannelTypes[channel.type.toUpperCase()] !== data.type) {\n        const newChannel = Channel.create(this.client, data, channel.guild);\n        for (const [id, message] of channel.messages.cache) newChannel.messages.cache.set(id, message);\n        newChannel._typing = new Map(channel._typing);\n        channel = newChannel;\n        this.client.channels.cache.set(channel.id, channel);\n      }\n\n      return {\n        old,\n        updated: channel,\n      };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = ChannelUpdateAction;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMC,OAAO,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACnD,MAAM;EAAEE;AAAa,CAAC,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAExD,MAAMG,mBAAmB,SAASJ,MAAM,CAAC;EACvCK,MAAM,CAACC,IAAI,EAAE;IACX,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,IAAIC,OAAO,GAAGD,MAAM,CAACE,QAAQ,CAACC,KAAK,CAACC,GAAG,CAACL,IAAI,CAACM,EAAE,CAAC;IAChD,IAAIJ,OAAO,EAAE;MACX,MAAMK,GAAG,GAAGL,OAAO,CAACM,OAAO,CAACR,IAAI,CAAC;MAEjC,IAAIH,YAAY,CAACK,OAAO,CAACO,IAAI,CAACC,WAAW,EAAE,CAAC,KAAKV,IAAI,CAACS,IAAI,EAAE;QAC1D,MAAME,UAAU,GAAGf,OAAO,CAACgB,MAAM,CAAC,IAAI,CAACX,MAAM,EAAED,IAAI,EAAEE,OAAO,CAACW,KAAK,CAAC;QACnE,KAAK,MAAM,CAACP,EAAE,EAAEQ,OAAO,CAAC,IAAIZ,OAAO,CAACa,QAAQ,CAACX,KAAK,EAAEO,UAAU,CAACI,QAAQ,CAACX,KAAK,CAACY,GAAG,CAACV,EAAE,EAAEQ,OAAO,CAAC;QAC9FH,UAAU,CAACM,OAAO,GAAG,IAAIC,GAAG,CAAChB,OAAO,CAACe,OAAO,CAAC;QAC7Cf,OAAO,GAAGS,UAAU;QACpB,IAAI,CAACV,MAAM,CAACE,QAAQ,CAACC,KAAK,CAACY,GAAG,CAACd,OAAO,CAACI,EAAE,EAAEJ,OAAO,CAAC;MACrD;MAEA,OAAO;QACLK,GAAG;QACHY,OAAO,EAAEjB;MACX,CAAC;IACH;IAEA,OAAO,CAAC,CAAC;EACX;AACF;AAEAkB,MAAM,CAACC,OAAO,GAAGvB,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}