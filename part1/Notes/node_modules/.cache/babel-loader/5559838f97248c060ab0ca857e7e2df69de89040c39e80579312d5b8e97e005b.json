{"ast":null,"code":"'use strict';\n\nconst {\n  Events,\n  Status\n} = require('../../../util/Constants');\nmodule.exports = (client, _ref, shard) => {\n  let {\n    d: data\n  } = _ref;\n  const guild = client.guilds.cache.get(data.guild_id);\n  if (guild) {\n    guild.memberCount++;\n    const member = guild.members.add(data);\n    if (shard.status === Status.READY) {\n      /**\n       * Emitted whenever a user joins a guild.\n       * @event Client#guildMemberAdd\n       * @param {GuildMember} member The member that has joined a guild\n       */\n      client.emit(Events.GUILD_MEMBER_ADD, member);\n    }\n  }\n};","map":{"version":3,"names":["Events","Status","require","module","exports","client","shard","d","data","guild","guilds","cache","get","guild_id","memberCount","member","members","add","status","READY","emit","GUILD_MEMBER_ADD"],"sources":["/Users/jessegill/node_modules/discord.js/src/client/websocket/handlers/GUILD_MEMBER_ADD.js"],"sourcesContent":["'use strict';\n\nconst { Events, Status } = require('../../../util/Constants');\n\nmodule.exports = (client, { d: data }, shard) => {\n  const guild = client.guilds.cache.get(data.guild_id);\n  if (guild) {\n    guild.memberCount++;\n    const member = guild.members.add(data);\n    if (shard.status === Status.READY) {\n      /**\n       * Emitted whenever a user joins a guild.\n       * @event Client#guildMemberAdd\n       * @param {GuildMember} member The member that has joined a guild\n       */\n      client.emit(Events.GUILD_MEMBER_ADD, member);\n    }\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA,MAAM;EAAEC;AAAO,CAAC,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAE7DC,MAAM,CAACC,OAAO,GAAG,CAACC,MAAM,QAAeC,KAAK,KAAK;EAAA,IAAvB;IAAEC,CAAC,EAAEC;EAAK,CAAC;EACnC,MAAMC,KAAK,GAAGJ,MAAM,CAACK,MAAM,CAACC,KAAK,CAACC,GAAG,CAACJ,IAAI,CAACK,QAAQ,CAAC;EACpD,IAAIJ,KAAK,EAAE;IACTA,KAAK,CAACK,WAAW,EAAE;IACnB,MAAMC,MAAM,GAAGN,KAAK,CAACO,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;IACtC,IAAIF,KAAK,CAACY,MAAM,KAAKjB,MAAM,CAACkB,KAAK,EAAE;MACjC;AACN;AACA;AACA;AACA;MACMd,MAAM,CAACe,IAAI,CAACpB,MAAM,CAACqB,gBAAgB,EAAEN,MAAM,CAAC;IAC9C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}