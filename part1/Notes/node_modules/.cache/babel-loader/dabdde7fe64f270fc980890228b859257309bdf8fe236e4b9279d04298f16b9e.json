{"ast":null,"code":"'use strict';\n\nconst {\n  browser\n} = require('./util/Constants');\nlet erlpack;\ntry {\n  erlpack = require('erlpack');\n  if (!erlpack.pack) erlpack = null;\n} catch {} // eslint-disable-line no-empty\n\nlet TextDecoder;\nif (browser) {\n  TextDecoder = window.TextDecoder; // eslint-disable-line no-undef\n  exports.WebSocket = window.WebSocket; // eslint-disable-line no-undef\n} else {\n  TextDecoder = require('util').TextDecoder;\n  exports.WebSocket = require('ws');\n}\nconst ab = new TextDecoder();\nexports.encoding = erlpack ? 'etf' : 'json';\nexports.pack = erlpack ? erlpack.pack : JSON.stringify;\nexports.unpack = (data, type) => {\n  if (exports.encoding === 'json' || type === 'json') {\n    if (typeof data !== 'string') {\n      data = ab.decode(data);\n    }\n    return JSON.parse(data);\n  }\n  if (!Buffer.isBuffer(data)) data = Buffer.from(new Uint8Array(data));\n  return erlpack.unpack(data);\n};\nexports.create = function (gateway) {\n  let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const [g, q] = gateway.split('?');\n  query.encoding = exports.encoding;\n  query = new URLSearchParams(query);\n  if (q) new URLSearchParams(q).forEach((v, k) => query.set(k, v));\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  const ws = new exports.WebSocket(`${g}?${query}`, ...args);\n  if (browser) ws.binaryType = 'arraybuffer';\n  return ws;\n};\nfor (const state of ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED']) exports[state] = exports.WebSocket[state];","map":{"version":3,"names":["browser","require","erlpack","pack","TextDecoder","window","exports","WebSocket","ab","encoding","JSON","stringify","unpack","data","type","decode","parse","Buffer","isBuffer","from","Uint8Array","create","gateway","query","g","q","split","URLSearchParams","forEach","v","k","set","args","ws","binaryType","state"],"sources":["/Users/jessegill/node_modules/discord.js/src/WebSocket.js"],"sourcesContent":["'use strict';\n\nconst { browser } = require('./util/Constants');\n\nlet erlpack;\n\ntry {\n  erlpack = require('erlpack');\n  if (!erlpack.pack) erlpack = null;\n} catch {} // eslint-disable-line no-empty\n\nlet TextDecoder;\n\nif (browser) {\n  TextDecoder = window.TextDecoder; // eslint-disable-line no-undef\n  exports.WebSocket = window.WebSocket; // eslint-disable-line no-undef\n} else {\n  TextDecoder = require('util').TextDecoder;\n  exports.WebSocket = require('ws');\n}\n\nconst ab = new TextDecoder();\n\nexports.encoding = erlpack ? 'etf' : 'json';\n\nexports.pack = erlpack ? erlpack.pack : JSON.stringify;\n\nexports.unpack = (data, type) => {\n  if (exports.encoding === 'json' || type === 'json') {\n    if (typeof data !== 'string') {\n      data = ab.decode(data);\n    }\n    return JSON.parse(data);\n  }\n  if (!Buffer.isBuffer(data)) data = Buffer.from(new Uint8Array(data));\n  return erlpack.unpack(data);\n};\n\nexports.create = (gateway, query = {}, ...args) => {\n  const [g, q] = gateway.split('?');\n  query.encoding = exports.encoding;\n  query = new URLSearchParams(query);\n  if (q) new URLSearchParams(q).forEach((v, k) => query.set(k, v));\n  const ws = new exports.WebSocket(`${g}?${query}`, ...args);\n  if (browser) ws.binaryType = 'arraybuffer';\n  return ws;\n};\n\nfor (const state of ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED']) exports[state] = exports.WebSocket[state];\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAQ,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAE/C,IAAIC,OAAO;AAEX,IAAI;EACFA,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;EAC5B,IAAI,CAACC,OAAO,CAACC,IAAI,EAAED,OAAO,GAAG,IAAI;AACnC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;;AAEX,IAAIE,WAAW;AAEf,IAAIJ,OAAO,EAAE;EACXI,WAAW,GAAGC,MAAM,CAACD,WAAW,CAAC,CAAC;EAClCE,OAAO,CAACC,SAAS,GAAGF,MAAM,CAACE,SAAS,CAAC,CAAC;AACxC,CAAC,MAAM;EACLH,WAAW,GAAGH,OAAO,CAAC,MAAM,CAAC,CAACG,WAAW;EACzCE,OAAO,CAACC,SAAS,GAAGN,OAAO,CAAC,IAAI,CAAC;AACnC;AAEA,MAAMO,EAAE,GAAG,IAAIJ,WAAW,EAAE;AAE5BE,OAAO,CAACG,QAAQ,GAAGP,OAAO,GAAG,KAAK,GAAG,MAAM;AAE3CI,OAAO,CAACH,IAAI,GAAGD,OAAO,GAAGA,OAAO,CAACC,IAAI,GAAGO,IAAI,CAACC,SAAS;AAEtDL,OAAO,CAACM,MAAM,GAAG,CAACC,IAAI,EAAEC,IAAI,KAAK;EAC/B,IAAIR,OAAO,CAACG,QAAQ,KAAK,MAAM,IAAIK,IAAI,KAAK,MAAM,EAAE;IAClD,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;MAC5BA,IAAI,GAAGL,EAAE,CAACO,MAAM,CAACF,IAAI,CAAC;IACxB;IACA,OAAOH,IAAI,CAACM,KAAK,CAACH,IAAI,CAAC;EACzB;EACA,IAAI,CAACI,MAAM,CAACC,QAAQ,CAACL,IAAI,CAAC,EAAEA,IAAI,GAAGI,MAAM,CAACE,IAAI,CAAC,IAAIC,UAAU,CAACP,IAAI,CAAC,CAAC;EACpE,OAAOX,OAAO,CAACU,MAAM,CAACC,IAAI,CAAC;AAC7B,CAAC;AAEDP,OAAO,CAACe,MAAM,GAAG,UAACC,OAAO,EAA0B;EAAA,IAAxBC,KAAK,uEAAG,CAAC,CAAC;EACnC,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGH,OAAO,CAACI,KAAK,CAAC,GAAG,CAAC;EACjCH,KAAK,CAACd,QAAQ,GAAGH,OAAO,CAACG,QAAQ;EACjCc,KAAK,GAAG,IAAII,eAAe,CAACJ,KAAK,CAAC;EAClC,IAAIE,CAAC,EAAE,IAAIE,eAAe,CAACF,CAAC,CAAC,CAACG,OAAO,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKP,KAAK,CAACQ,GAAG,CAACD,CAAC,EAAED,CAAC,CAAC,CAAC;EAAC,kCAJzBG,IAAI;IAAJA,IAAI;EAAA;EAK5C,MAAMC,EAAE,GAAG,IAAI3B,OAAO,CAACC,SAAS,CAAE,GAAEiB,CAAE,IAAGD,KAAM,EAAC,EAAE,GAAGS,IAAI,CAAC;EAC1D,IAAIhC,OAAO,EAAEiC,EAAE,CAACC,UAAU,GAAG,aAAa;EAC1C,OAAOD,EAAE;AACX,CAAC;AAED,KAAK,MAAME,KAAK,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE7B,OAAO,CAAC6B,KAAK,CAAC,GAAG7B,OAAO,CAACC,SAAS,CAAC4B,KAAK,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}